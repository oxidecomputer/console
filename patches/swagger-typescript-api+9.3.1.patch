diff --git a/node_modules/swagger-typescript-api/src/routes.js b/node_modules/swagger-typescript-api/src/routes.js
index 2beb1a0..b3a9f77 100644
--- a/node_modules/swagger-typescript-api/src/routes.js
+++ b/node_modules/swagger-typescript-api/src/routes.js
@@ -299,7 +299,7 @@ const createRequestParamsSchema = ({
   extractRequestParams,
   routeName,
 }) => {
-  if (!queryParams || !queryParams.length) return null;
+  if (!extractRequestParams && (!queryParams || !queryParams.length)) return null;
 
   const pathParams = _.reduce(
     pathArgsSchemas,
@@ -683,7 +683,7 @@ const parseRoutes = ({
 
           const routeData = {
             id: routeId,
-            namespace: _.replace(moduleName, /^(\d)/, "v$1"),
+            namespace: "methods",
             routeName,
             routeParams,
             requestBodyInfo,
diff --git a/node_modules/swagger-typescript-api/templates/default/procedure-call.eta b/node_modules/swagger-typescript-api/templates/default/procedure-call.eta
index 7ff931c..7423fd1 100644
--- a/node_modules/swagger-typescript-api/templates/default/procedure-call.eta
+++ b/node_modules/swagger-typescript-api/templates/default/procedure-call.eta
@@ -21,14 +21,15 @@ const requestConfigParam = {
 
 const argToTmpl = ({ name, optional, type, defaultValue }) => `${name}${!defaultValue && optional ? '?' : ''}: ${type}${defaultValue ? ` = ${defaultValue}` : ''}`;
 
+const querySpread = query ? `...${queryName} ` : '';
+
 const rawWrapperArgs = config.extractRequestParams ?
     _.compact([
-        requestParams && {
-          name: pathParams.length ? `{ ${_.join(pathParamsNames, ", ")}, ...${queryName} }` : queryName,
+        Object.keys(requestParams).length > 0 && {
+          name: pathParams.length ? `{ ${_.join(pathParamsNames, ", ")}, ${querySpread}}` : queryName,
           optional: false,
           type: getInlineParseContent(requestParams),
         },
-        ...(!requestParams ? pathParams : []),
         payload,
         requestConfigParam,
     ]) :
