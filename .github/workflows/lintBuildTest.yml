name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  install:
    timeout-minutes: 60
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: npm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install
  ci:
    timeout-minutes: 5
    runs-on: macos-14
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Get node_modules from cache
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Typecheck
        run: npx tsc
      - name: Lint
        run: npm run lint
      - name: Test
        run: VITEST_MAX_THREADS=1 VITEST_MIN_THREADS=1 npm run test run
      - name: Build
        run: npm run build
  playwright:
    name: Playwright (${{ matrix.browser }})
    timeout-minutes: 20
    runs-on: macos-14
    needs: install
    strategy:
      fail-fast: false
      matrix:
        browser: ['chrome', 'firefox', 'safari']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Get node_modules from cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Set env.PLAYWRIGHT_VERSION
        run: |
          PLAYWRIGHT_VERSION=$(npm ls --json @playwright/test | jq --raw-output '.dependencies["@playwright/test"].version')
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV
      # Cache browser binaries, cache key is based on Playwright version and OS
      - name: Cache Playwright browser binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: '~/.cache/ms-playwright'
          key: '${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}'
          restore-keys: |
            ${{ runner.os }}-playwright-
      # Install browser binaries & OS dependencies if cache missed
      - name: Install Playwright
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      # Install only the OS dependencies if cache hit
      - name: üèó Install Playwright OS dependencies
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: npx playwright install-deps
      - name: Run Playwright browser tests
        run: npx playwright test --project=${{matrix.browser}}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 7
