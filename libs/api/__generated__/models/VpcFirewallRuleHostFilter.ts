/* tslint:disable */
/* eslint-disable */
/**
 * Oxide Region API
 * API for interacting with the Oxide control plane
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: api@oxide.computer
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
  RouteDestinationOneOf,
  RouteDestinationOneOf1,
  RouteDestinationOneOf2,
  RouteTargetOneOf,
  RouteTargetOneOf1,
  RouteDestinationOneOfFromJSONTyped,
  RouteDestinationOneOfToJSON,
  RouteDestinationOneOf1FromJSONTyped,
  RouteDestinationOneOf1ToJSON,
  RouteDestinationOneOf2FromJSONTyped,
  RouteDestinationOneOf2ToJSON,
  RouteTargetOneOfFromJSONTyped,
  RouteTargetOneOfToJSON,
  RouteTargetOneOf1FromJSONTyped,
  RouteTargetOneOf1ToJSON,
} from './'

/**
 * @type VpcFirewallRuleHostFilter
 * A subset of [`NetworkTarget`], `VpcFirewallRuleHostFilter` specifies all possible targets that a route can forward to.
 * @export
 */
export type VpcFirewallRuleHostFilter =
  | RouteDestinationOneOf
  | RouteDestinationOneOf1
  | RouteDestinationOneOf2
  | RouteTargetOneOf
  | RouteTargetOneOf1

export function VpcFirewallRuleHostFilterFromJSON(
  json: any
): VpcFirewallRuleHostFilter {
  return VpcFirewallRuleHostFilterFromJSONTyped(json, false)
}

export function VpcFirewallRuleHostFilterFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): VpcFirewallRuleHostFilter {
  if (json === undefined || json === null) {
    return json
  }
  return {
    ...RouteDestinationOneOfFromJSONTyped(json, true),
    ...RouteDestinationOneOf1FromJSONTyped(json, true),
    ...RouteDestinationOneOf2FromJSONTyped(json, true),
    ...RouteTargetOneOfFromJSONTyped(json, true),
    ...RouteTargetOneOf1FromJSONTyped(json, true),
  }
}

export function VpcFirewallRuleHostFilterToJSON(
  value?: VpcFirewallRuleHostFilter | null
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    ...RouteDestinationOneOfToJSON(value as any),
    ...RouteDestinationOneOf1ToJSON(value as any),
    ...RouteDestinationOneOf2ToJSON(value as any),
    ...RouteTargetOneOfToJSON(value as any),
    ...RouteTargetOneOf1ToJSON(value as any),
  }
}
