/* tslint:disable */
/* eslint-disable */
/**
 * Oxide Region API
 * API for interacting with the Oxide control plane
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: api@oxide.computer
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 * Client view of an [`Project`]
 * @export
 * @interface Project
 */
export interface Project {
  /**
   * human-readable free-form text about a resource
   * @type {string}
   * @memberof Project
   */
  description: string
  /**
   * unique, immutable, system-controlled identifier for each resource
   * @type {string}
   * @memberof Project
   */
  id: string
  /**
   * unique, mutable, user-controlled identifier for each resource
   * @type {string}
   * @memberof Project
   */
  name: string
  /**
   *
   * @type {string}
   * @memberof Project
   */
  organizationId: string
  /**
   * timestamp when this resource was created
   * @type {Date}
   * @memberof Project
   */
  timeCreated: Date
  /**
   * timestamp when this resource was last modified
   * @type {Date}
   * @memberof Project
   */
  timeModified: Date
}

export function ProjectFromJSON(json: any): Project {
  return ProjectFromJSONTyped(json, false)
}

export function ProjectFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Project {
  if (json === undefined || json === null) {
    return json
  }
  return {
    description: json['description'],
    id: json['id'],
    name: json['name'],
    organizationId: json['organizationId'],
    timeCreated: new Date(json['timeCreated']),
    timeModified: new Date(json['timeModified']),
  }
}

export function ProjectToJSON(value?: Project | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    description: value.description,
    id: value.id,
    name: value.name,
    organizationId: value.organizationId,
    timeCreated: value.timeCreated.toISOString(),
    timeModified: value.timeModified.toISOString(),
  }
}
