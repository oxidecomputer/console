/* tslint:disable */
/* eslint-disable */
/**
 * Oxide Region API
 * API for interacting with the Oxide control plane
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: api@oxide.computer
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 * Identity-related metadata that's included in nearly all public API objects
 * @export
 * @interface ApiIdentityMetadata
 */
export interface ApiIdentityMetadata {
  /**
   * human-readable free-form text about a resource
   * @type {string}
   * @memberof ApiIdentityMetadata
   */
  description: string
  /**
   * unique, immutable, system-controlled identifier for each resource
   * @type {string}
   * @memberof ApiIdentityMetadata
   */
  id: string
  /**
   * Names must begin with a lower case ASCII letter, be composed exclusively of lowercase ASCII, uppercase ASCII, numbers, and '-', and may not end with a '-'.
   * @type {string}
   * @memberof ApiIdentityMetadata
   */
  name: string
  /**
   * timestamp when this resource was created
   * @type {Date}
   * @memberof ApiIdentityMetadata
   */
  timeCreated: Date
  /**
   * timestamp when this resource was last modified
   * @type {Date}
   * @memberof ApiIdentityMetadata
   */
  timeModified: Date
}

export function ApiIdentityMetadataFromJSON(json: any): ApiIdentityMetadata {
  return ApiIdentityMetadataFromJSONTyped(json, false)
}

export function ApiIdentityMetadataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ApiIdentityMetadata {
  if (json === undefined || json === null) {
    return json
  }
  return {
    description: json['description'],
    id: json['id'],
    name: json['name'],
    timeCreated: new Date(json['timeCreated']),
    timeModified: new Date(json['timeModified']),
  }
}

export function ApiIdentityMetadataToJSON(
  value?: ApiIdentityMetadata | null
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    description: value.description,
    id: value.id,
    name: value.name,
    timeCreated: value.timeCreated.toISOString(),
    timeModified: value.timeModified.toISOString(),
  }
}
