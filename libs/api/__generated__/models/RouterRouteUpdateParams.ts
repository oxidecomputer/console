/* tslint:disable */
/* eslint-disable */
/**
 * Oxide Region API
 * API for interacting with the Oxide control plane
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: api@oxide.computer
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
  RouteDestination,
  RouteDestinationFromJSON,
  RouteDestinationFromJSONTyped,
  RouteDestinationToJSON,
  RouteTarget,
  RouteTargetFromJSON,
  RouteTargetFromJSONTyped,
  RouteTargetToJSON,
} from './'

/**
 * Updateable properties of a [`RouterRoute`]
 * @export
 * @interface RouterRouteUpdateParams
 */
export interface RouterRouteUpdateParams {
  /**
   *
   * @type {string}
   * @memberof RouterRouteUpdateParams
   */
  description?: string | null
  /**
   *
   * @type {RouteDestination}
   * @memberof RouterRouteUpdateParams
   */
  destination: RouteDestination
  /**
   *
   * @type {string}
   * @memberof RouterRouteUpdateParams
   */
  name?: string | null
  /**
   *
   * @type {RouteTarget}
   * @memberof RouterRouteUpdateParams
   */
  target: RouteTarget
}

export function RouterRouteUpdateParamsFromJSON(
  json: any
): RouterRouteUpdateParams {
  return RouterRouteUpdateParamsFromJSONTyped(json, false)
}

export function RouterRouteUpdateParamsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): RouterRouteUpdateParams {
  if (json === undefined || json === null) {
    return json
  }
  return {
    description: !exists(json, 'description') ? undefined : json['description'],
    destination: RouteDestinationFromJSON(json['destination']),
    name: !exists(json, 'name') ? undefined : json['name'],
    target: RouteTargetFromJSON(json['target']),
  }
}

export function RouterRouteUpdateParamsToJSON(
  value?: RouterRouteUpdateParams | null
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    description: value.description,
    destination: RouteDestinationToJSON(value.destination),
    name: value.name,
    target: RouteTargetToJSON(value.target),
  }
}
