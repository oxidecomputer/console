/* tslint:disable */
/* eslint-disable */
/**
 * Oxide Region API
 * API for interacting with the Oxide control plane
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: api@oxide.computer
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
  DiskStateAnyOf,
  DiskStateAnyOfFromJSON,
  DiskStateAnyOfFromJSONTyped,
  DiskStateAnyOfToJSON,
  DiskStateAnyOf1,
  DiskStateAnyOf1FromJSON,
  DiskStateAnyOf1FromJSONTyped,
  DiskStateAnyOf1ToJSON,
  DiskStateAnyOf2,
  DiskStateAnyOf2FromJSON,
  DiskStateAnyOf2FromJSONTyped,
  DiskStateAnyOf2ToJSON,
  DiskStateAnyOf3,
  DiskStateAnyOf3FromJSON,
  DiskStateAnyOf3FromJSONTyped,
  DiskStateAnyOf3ToJSON,
} from './'

/**
 * State of a Disk (primarily: attached or not)
 * @export
 * @interface DiskState
 */
export interface DiskState {
  /**
   *
   * @type {string}
   * @memberof DiskState
   */
  attaching: string
  /**
   *
   * @type {string}
   * @memberof DiskState
   */
  attached: string
  /**
   *
   * @type {string}
   * @memberof DiskState
   */
  detaching: string
}

export function DiskStateFromJSON(json: any): DiskState {
  return DiskStateFromJSONTyped(json, false)
}

export function DiskStateFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): DiskState {
  if (json === undefined || json === null) {
    return json
  }
  return {
    attaching: json['attaching'],
    attached: json['attached'],
    detaching: json['detaching'],
  }
}

export function DiskStateToJSON(value?: DiskState | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    attaching: value.attaching,
    attached: value.attached,
    detaching: value.detaching,
  }
}
