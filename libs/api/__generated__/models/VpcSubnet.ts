/* tslint:disable */
/* eslint-disable */
/**
 * Oxide Region API
 * API for interacting with the Oxide control plane
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: api@oxide.computer
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
  IdentityMetadata,
  IdentityMetadataFromJSON,
  IdentityMetadataFromJSONTyped,
  IdentityMetadataToJSON,
} from './'

/**
 * A VPC subnet represents a logical grouping for instances that allows network traffic between them, within a IPv4 subnetwork or optionall an IPv6 subnetwork.
 * @export
 * @interface VpcSubnet
 */
export interface VpcSubnet {
  /**
   *
   * @type {IdentityMetadata}
   * @memberof VpcSubnet
   */
  identity: IdentityMetadata
  /**
   * An IPv4 subnet, including prefix and subnet mask
   * @type {string}
   * @memberof VpcSubnet
   */
  ipv4Block?: string
  /**
   * An IPv6 subnet, including prefix and subnet mask
   * @type {string}
   * @memberof VpcSubnet
   */
  ipv6Block?: string
  /**
   * The VPC to which the subnet belongs.
   * @type {string}
   * @memberof VpcSubnet
   */
  vpcId: string
}

export function VpcSubnetFromJSON(json: any): VpcSubnet {
  return VpcSubnetFromJSONTyped(json, false)
}

export function VpcSubnetFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): VpcSubnet {
  if (json === undefined || json === null) {
    return json
  }
  return {
    identity: IdentityMetadataFromJSON(json['identity']),
    ipv4Block: !exists(json, 'ipv4_block') ? undefined : json['ipv4_block'],
    ipv6Block: !exists(json, 'ipv6_block') ? undefined : json['ipv6_block'],
    vpcId: json['vpc_id'],
  }
}

export function VpcSubnetToJSON(value?: VpcSubnet | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    identity: IdentityMetadataToJSON(value.identity),
    ipv4_block: value.ipv4Block,
    ipv6_block: value.ipv6Block,
    vpc_id: value.vpcId,
  }
}
