/* tslint:disable */
/* eslint-disable */
/**
 * Oxide Region API
 * API for interacting with the Oxide control plane
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: api@oxide.computer
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 * Create-time parameters for a [`VpcSubnet`]
 * @export
 * @interface VpcSubnetCreateParams
 */
export interface VpcSubnetCreateParams {
  /**
   *
   * @type {string}
   * @memberof VpcSubnetCreateParams
   */
  description: string
  /**
   * An IPv4 subnet, including prefix and subnet mask
   * @type {string}
   * @memberof VpcSubnetCreateParams
   */
  ipv4Block?: string
  /**
   * An IPv6 subnet, including prefix and subnet mask
   * @type {string}
   * @memberof VpcSubnetCreateParams
   */
  ipv6Block?: string
  /**
   * Names must begin with a lower case ASCII letter, be composed exclusively of lowercase ASCII, uppercase ASCII, numbers, and '-', and may not end with a '-'.
   * @type {string}
   * @memberof VpcSubnetCreateParams
   */
  name: string
}

export function VpcSubnetCreateParamsFromJSON(
  json: any
): VpcSubnetCreateParams {
  return VpcSubnetCreateParamsFromJSONTyped(json, false)
}

export function VpcSubnetCreateParamsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): VpcSubnetCreateParams {
  if (json === undefined || json === null) {
    return json
  }
  return {
    description: json['description'],
    ipv4Block: !exists(json, 'ipv4Block') ? undefined : json['ipv4Block'],
    ipv6Block: !exists(json, 'ipv6Block') ? undefined : json['ipv6Block'],
    name: json['name'],
  }
}

export function VpcSubnetCreateParamsToJSON(
  value?: VpcSubnetCreateParams | null
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    description: value.description,
    ipv4Block: value.ipv4Block,
    ipv6Block: value.ipv6Block,
    name: value.name,
  }
}
